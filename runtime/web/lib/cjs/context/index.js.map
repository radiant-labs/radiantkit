{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/context/index.tsx"],"names":[],"mappings":";;;;AAAA,uDAAsF;AACtF,gFAAoD;AACpD,2CAAkD;AAOlD,MAAM,iBAAiB,GAAG,IAAA,qBAAa,EAAkB;IACrD,UAAU,EAAE,IAAI;IAChB,QAAQ,EAAE,EAAE;CACf,CAAC,CAAC;AAYH,SAAS,kBAAkB,CAAC,EAAE,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAA2B;IACxH,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,IAAA,gBAAQ,EAA8B,IAAI,CAAC,CAAC;IAChF,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,IAAA,gBAAQ,EAAM,EAAE,CAAC,CAAC;IAElD,MAAM,QAAQ,GAAG,GAAS,EAAE;QACxB,IAAI;YACA,MAAM,IAAA,oBAAI,GAAE,CAAC;YACb,IAAI,UAAU,GAAG,MAAM,iCAAoB,CAAC,gBAAgB,CACxD,SAAS,IAAI,MAAM,CAAC,CAAC,CAAC,EACtB,WAAW,IAAI,KAAK,EACpB,CAAC,OAAY,EAAE,EAAE;gBACb,WAAW,CAAC,OAAO,CAAC,CAAC;YACzB,CAAC,EACD,KAAK,EACL,MAAM,EACN,QAAQ,EACR,QAAQ,CACX,CAAC;YACF,aAAa,CAAC,UAAU,CAAC,CAAC;SAC7B;QAAC,OAAO,KAAK,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACtB;IACL,CAAC,CAAA,CAAC;IAEF,MAAM,CAAC,EAAE,WAAW,CAAC,GAAG,IAAA,gBAAQ,EAAC,CAAC,CAAC,CAAC;IACpC,MAAM,OAAO,GAAG,IAAA,cAAM,EAAS,CAAC,CAAC,CAAC;IAClC,MAAM,YAAY,GAAG,IAAA,cAAM,EAAU,KAAK,CAAC,CAAC;IAE5C,IAAA,iBAAS,EAAC,GAAG,EAAE;QACX,IAAI,YAAY,CAAC,OAAO;YAAE,OAAO;QACjC,OAAO,CAAC,OAAO,IAAI,CAAC,CAAC;QACrB,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC7B,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC;QAC5B,QAAQ,EAAE,CAAC;IACf,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,OAAO,CACH,8BAAC,iBAAiB,CAAC,QAAQ,IAAC,KAAK,EAAE;YAC/B,UAAU;YACV,QAAQ;SACX,IACI,QAAQ,CACgB,CAChC,CAAA;AACL,CAAC;AAMQ,gDAAkB;AAJ3B,MAAM,oBAAoB,GAAG,GAAG,EAAE;IAC9B,OAAO,IAAA,kBAAU,EAAC,iBAAiB,CAAC,CAAC;AACzC,CAAC,CAAA;AAE4B,oDAAoB","sourcesContent":["import React, { useState, createContext, useEffect, useRef, useContext } from \"react\";\nimport init, { Vec3 } from \"@radiantkit/radiantkit\";\nimport { RadiantKitController } from \"controller\";\n\nexport interface RadiantKitState {\n    controller: RadiantKitController | null;\n    response: any;\n}\n\nconst RadiantKitContext = createContext<RadiantKitState>({\n    controller: null,\n    response: {},\n});\n\nexport interface RadiantKitProviderProps {\n    client_id?: bigint;\n    collaborate?: boolean;\n    width?: number;\n    height?: number;\n    paddingX?: number;\n    paddingY?: number;\n    children?: any;\n}\n\nfunction RadiantKitProvider({ client_id, collaborate, width, height, paddingX, paddingY, children }: RadiantKitProviderProps) {\n    const [controller, setController] = useState<RadiantKitController | null>(null);\n    const [response, setResponse] = useState<any>({});\n\n    const initWasm = async () => {\n        try {\n            await init();\n            let controller = await RadiantKitController.createController(\n                client_id || BigInt(2), \n                collaborate || false, \n                (message: any) => {\n                    setResponse(message);\n                }, \n                width, \n                height,\n                paddingX,\n                paddingY,\n            );\n            setController(controller);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const [, setTimesRun] = useState(0);\n    const counter = useRef<number>(0);\n    const effectCalled = useRef<boolean>(false);\n\n    useEffect(() => {\n        if (effectCalled.current) return;\n        counter.current += 1;\n        setTimesRun(counter.current);\n        effectCalled.current = true;\n        initWasm();\n    }, []);\n\n    return (\n        <RadiantKitContext.Provider value={{\n            controller,\n            response,\n        }}>\n            {children}\n        </RadiantKitContext.Provider>\n    )\n}\n\nconst useCurrentController = () => {\n    return useContext(RadiantKitContext);\n}\n\nexport { RadiantKitProvider, useCurrentController };\n"]}